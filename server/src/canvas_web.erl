%% @author Nick Ewing <nick@nickewing.net>
%% @copyright 2009 Nick Ewing.

%% @doc Web server for canvas.
%%      See 3.1.2.1 HTTP Interface in SRS

-module(canvas_web).
-author('Nicholas E. Ewing <nick@nickewing.net>').

-export([start/1, stop/0, loop/3]).

-include("canvas.hrl").
-include_lib("eunit/include/eunit.hrl").

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% External API
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% @doc Start the web interface
start(Options) ->
  {ok, CM} = client_manager:start(),
  S = #s_state{cm = CM},
  io:format("~p ~p~n", [S, Options]),
  {DocRoot, Options1} = get_option(docroot, Options),
  Loop =  fun (Req) ->
            ?MODULE:loop(Req, S, DocRoot)
          end,
  mochiweb_http:start([
    {max,  1000000}, % max connections
    {name, ?MODULE},
    {loop, Loop}
    | Options1
  ]).

%% @doc Stop the web interface
stop() ->
  mochiweb_http:stop(?MODULE).

%% @doc Handle requests
loop(Req, S, DocRoot) ->
  case Req:get(method) of
    Method when Method =:= 'GET';
                Method =:= 'HEAD';
                Method =:= 'POST' ->
      case request_controller:route_request(Req, S) of
        no_route ->
          "/" ++ Path = Req:get(path),
          case Path of
            "" ->
              io:format("~s~n", [?default_www_path]),
              Req:respond({302, [{"Location", ?default_www_path}], ""});
            _ ->
              Req:serve_file(Path, DocRoot)
          end;
        Resp ->
          Resp
      end;
    _ ->
      Req:respond({501, [], []})
  end.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Internal API
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

get_option(Option, Options) ->
  {proplists:get_value(Option, Options), proplists:delete(Option, Options)}.
  
  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Tests
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Module was autogenerated by mochiweb framework.  Tests are provided in the
%% framework

get_option_test() ->
  Opts = [{ip,      "0.0.0.0"},
          {port,    8000},
          {docroot, "/Users/nick/Work/Projects/canvas/server/priv/www"}],
  ?assertEqual(
    {8000, [{ip,      "0.0.0.0"},
            {docroot, "/Users/nick/Work/Projects/canvas/server/priv/www"}]},
    get_option(port, Opts)
  ).